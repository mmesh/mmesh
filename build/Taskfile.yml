version: '3'

silent: true

vars:
  NAME: mmesh
  ORG: mmesh
  DOMAIN: mmesh.dev
  GITHUB_PKG: 'github.com/{{.ORG}}/{{.NAME}}'
  PREFIX: {sh: pwd}
  DIST_DIR: '{{.PREFIX}}/_dist'
  VERSION: {sh: cat VERSION}
  LOCAL_UID: {sh: id -u}
  LOCAL_GID: {sh: id -g}
  GS_BUCKET: 'gs://mmesh-io'

env:
  TASK: tf
  PKG: '{{.DOMAIN}}/{{.NAME}}'
  VERSION: {sh: cat VERSION}
  VERSION_DATE: {sh: date -u +%Y%m%d%H%M%S}
  GO_VERSION: {sh: go version | cut -f 3 -d ' '}
  GO111MODULE: on
  CGO_ENABLED: 0

tasks:
  build-manager:
    desc: Build mmesh-manager
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} build-manager

  build-controller:
    desc: Build mmesh-controller
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} build-controller

  build-adm:
    desc: Build mmesh-adm
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} build-adm

  build-node:
    desc: Build mmesh-node
    dir: '{{.PREFIX}}/modules/m-node'
    cmds:
      - ${TASK} build-node

  build-cli:
    desc: Build mmesh-cli
    dir: '{{.PREFIX}}/modules/m-cli'
    cmds:
      - ${TASK} build-cli

  build-all:
    desc: Build all binaries.
    cmds:
      - task: build-manager
      - task: build-controller
      - task: build-adm
      - task: build-node
      - task: build-cli

  clean:
    desc: Clean dist working directory.
    cmds:
      - echo 'Cleaning dist working directory...'
      - rm -rf {{.DIST_DIR}}

  docker-push-node-dev:
    desc: docker build and push -- mmesh-node (dev build)
    dir: '{{.PREFIX}}/modules/m-node'
    deps: [build-node]
    cmds:
      - ${TASK} docker-push-node-dev

  docker-push-node-stable:
    desc: docker build and push -- mmesh-node (stable build)
    dir: '{{.PREFIX}}/modules/m-node'
    deps: [build-node]
    cmds:
      - ${TASK} docker-push-node-stable

  docker-push-cli-dev:
    desc: docker build and push -- mmesh-cli (dev build)
    dir: '{{.PREFIX}}/modules/m-cli'
    deps: [build-cli]
    cmds:
      - ${TASK} docker-push-cli-dev

  docker-push-cli-stable:
    desc: docker build and push -- mmesh-cli (stable build)
    dir: '{{.PREFIX}}/modules/m-cli'
    deps: [build-cli]
    cmds:
      - ${TASK} docker-push-cli-stable

  release-manager-dev:
    desc: Release binaries -- mmesh-manager (dev build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-manager-dev

  release-manager-stable:
    desc: Release binaries -- mmesh-manager (stable build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-manager-stable

  release-controller-dev:
    desc: Release binaries -- mmesh-controller (dev build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-controller-dev

  release-controller-stable:
    desc: Release binaries -- mmesh-controller (stable build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-controller-stable

  release-adm-dev:
    desc: Release binaries -- mmesh-adm (dev build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-adm-dev

  release-adm-stable:
    desc: Release binaries -- mmesh-adm (stable build)
    dir: '{{.PREFIX}}/modules/m-sys'
    cmds:
      - ${TASK} release-adm-stable

  release-node-dev:
    desc: Release binaries -- m-node (dev build)
    dir: '{{.PREFIX}}/modules/m-node'
    cmds:
      - ${TASK} build-node
      - ${TASK} release-all-dev

  release-node-stable:
    desc: Release binaries -- m-node (stable build)
    dir: '{{.PREFIX}}/modules/m-node'
    cmds:
      - ${TASK} goreleaser
      - ${TASK} release-all-stable

  release-cli-dev:
    desc: Release binaries -- m-cli (dev build)
    dir: '{{.PREFIX}}/modules/m-cli'
    cmds:
      - ${TASK} build-cli
      - ${TASK} release-all-dev

  release-cli-stable:
    desc: Release binaries -- m-cli (stable build)
    dir: '{{.PREFIX}}/modules/m-cli'
    cmds:
      - ${TASK} goreleaser
      - ${TASK} release-all-stable

  release-all-dev:
    desc: Release all docker images and binaries (dev build)
    cmds:
      - task: release-manager-dev
      - task: release-controller-dev
      - task: release-adm-dev
      - task: release-node-dev
      - task: release-cli-dev

  release-all-stable:
    desc: Release all docker images and binaries (stable build)
    cmds:
      - task: release-manager-stable
      - task: release-controller-stable
      - task: release-adm-stable
      - task: release-node-stable
      - task: release-cli-stable

  update-module-m-lib:
    desc: Update m-lib module
    dir: '{{.PREFIX}}/modules/m-lib'
    cmds:
      - ${TASK} check-code
      - ${TASK} git:update-git-repo

  update-modules:
    desc: Update module
    dir: '{{.PREFIX}}/modules/m-lib'
    cmds:
      - task: update-module-m-lib

includes:
  git: ./build/taskfiles/build/gitTasks.yml
  golang: ./build/taskfiles/build/golangTasks.yml
  docker: ./build/taskfiles/build/dockerTasks.yml
